{"version":3,"sources":["reducers/index.js","client_socket.js","components/Comment.js","components/SideBar.js","actions/index.js","components/MessageArea.js","components/TextArea.js","components/GoogleAuth.js","components/App.js","index.js"],"names":["INITIAL_STATE","isSignedIn","userId","combineReducers","messageReducer","state","messages","action","type","payload","authReducer","userDetails","connectionReducer","usersConnectedList","socket","openSocket","Comment","props","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","className","image","src","alt","href","name","text","connect","userList","updateUsersList","currentUsersList","useEffect","on","loggedUsers","console","log","id","map","user","key","userid","username","recieveMessage","message","ind","Date","senderName","auth","placeholder","onKeyPress","event","getName","target","value","getImageUrl","emit","sendMessage","GoogleAuth","onAuthChange","signIn","currentUser","get","getBasicProfile","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","onClick","renderAuthButton","React","Component","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9d896e3e.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null\r\n};\r\n\r\nconst messageReducer = (state = { messages: [] }, action) => {\r\n  if (action.type === \"RECIEVE_MESSAGE\") {\r\n    return { ...state, messages: [...state.messages, action.payload] };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst connectionReducer = (state = { usersConnectedList: [] }, action) => {\r\n  if (action.type === \"UPDATE_USERS_LIST\") {\r\n    return {\r\n      ...state,\r\n      usersConnectedList: [...action.payload]\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return { ...state, isSignedIn: true, userDetails: action.payload };\r\n    case \"SIGN_OUT\":\r\n      return { ...state, isSignedIn: false, userDetails: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  messageReducer,\r\n  authReducer,\r\n  connectionReducer\r\n});\r\n","import openSocket from \"socket.io-client\";\r\n\r\nconst socket = openSocket(\"wss://chatsocket490.herokuapp.com\");\r\n// const socket = openSocket(\"http://192.168.1.6:8000\");\r\n// const socket = openSocket(\"http://localhost:8000\");\r\nexport { socket };\r\n","import React from \"react\";\r\n\r\nconst Comment = props => {\r\n  const date =\r\n    props.date.getDate() +\r\n    \"/\" +\r\n    (props.date.getMonth() + 1) +\r\n    \"/\" +\r\n    props.date.getFullYear() +\r\n    \" @ \" +\r\n    props.date.getHours() +\r\n    \":\" +\r\n    props.date.getMinutes() +\r\n    \":\" +\r\n    props.date.getSeconds();\r\n\r\n  const renderAvatar = () => {\r\n    if (props.image === \"\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"avatar\">\r\n        <img src={props.image} alt=\"\" />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"content\">\r\n        {renderAvatar()}\r\n        <a className=\"author\" href=\"www.walla.com\">\r\n          {props.name}\r\n        </a>\r\n        <div className=\"metadata\">\r\n          <div>{date}</div>\r\n        </div>\r\n        <div className=\"text\">\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import \"../styles/SideBar.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUsersList } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\n\r\nconst SideBar = ({ userList, updateUsersList }) => {\r\n  useEffect(() => {\r\n    socket.on(\"userListHasChanged\", loggedUsers => {\r\n      updateUsersList(loggedUsers);\r\n    });\r\n  }, [updateUsersList]);\r\n\r\n  const renderUserList = () => {\r\n    console.log(socket.id);\r\n    return userList.map(user => {\r\n      return (\r\n        <button\r\n          key={user.userid}\r\n          className={`${socket.id === user.userid ? \"youspan\" : \"\"} logged-usr`}\r\n        >\r\n          {socket.id === user.userid ? \"You:\" : \"\"} Guest {user.username}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui sideBar segment\">\r\n      <button className=\"header\">Users in chat:</button>\r\n      {renderUserList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userList: [...state.connectionReducer.usersConnectedList]\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateUsersList }\r\n)(SideBar);\r\n","export const signIn = userDetails => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: userDetails\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: \"SIGN_OUT\"\r\n  };\r\n};\r\n\r\nexport const recieveMessage = message => {\r\n  return {\r\n    type: \"RECIEVE_MESSAGE\",\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const updateUsersList = currentUsersList => {\r\n  return {\r\n    type: \"UPDATE_USERS_LIST\",\r\n    payload: currentUsersList\r\n  };\r\n};\r\n","import \"../styles/MessageArea.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { recieveMessage } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\nimport Comment from \"./Comment\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst MessageArea = ({ recieveMessage, messages }) => {\r\n  useEffect(() => {\r\n    socket.on(\"viewMessage\", message => recieveMessage(message));\r\n  }, [recieveMessage]);\r\n\r\n  const renderComments = () => {\r\n    return messages.map((message, ind) => {\r\n      if (typeof message === \"string\") {\r\n        return <Comment key={ind} name={\"\"} date={new Date()} text={message} />;\r\n      }\r\n      return (\r\n        <Comment\r\n          key={ind}\r\n          name={message.senderName}\r\n          date={new Date(message.date)}\r\n          text={message.text}\r\n          image={message.image}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"ui chat-view\">\r\n      <SideBar />\r\n      <div className=\"ui fluid comments segment container\">\r\n        {renderComments()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: [...state.messageReducer.messages]\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { recieveMessage }\r\n)(MessageArea);\r\n","import \"../styles/TextArea.css\";\r\nimport React from \"react\";\r\nimport { socket } from \"../client_socket\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TextArea = ({ auth }) => {\r\n  const sendMessage = message => {\r\n    socket.emit(\"subscribeMessage\", message);\r\n  };\r\n  const onSubmit = event => {\r\n    if (event.key === \"Enter\") {\r\n      const message = {\r\n        senderName: auth.userDetails ? auth.userDetails.getName() : \"Guest\",\r\n        date: new Date(),\r\n        text: event.target.value,\r\n        image: auth.userDetails ? auth.userDetails.getImageUrl() : \"\"\r\n      };\r\n      event.target.value = \"\";\r\n      sendMessage(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container fluid focus input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chat\"\r\n        className=\"input-sizing\"\r\n        onKeyPress={onSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return { auth: state.authReducer };\r\n};\r\nexport default connect(mapStateToProps)(TextArea);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"548027089353-j03e14pvp4o81noalqup4e212iscpqlb.apps.googleusercontent.com\",\r\n          scope: \"email profile\"\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getBasicProfile());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return <span>There is some problem with the API</span>;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign in with Google\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.authReducer.isSignedIn };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import \"../styles/App.css\";\r\nimport React from \"react\";\r\nimport MessageArea from \"./MessageArea\";\r\nimport TextArea from \"./TextArea\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui chat\">\r\n        <div className=\"ui placeholder segment\">\r\n          <MessageArea />\r\n          <div className=\"ui divider\"></div>\r\n          <TextArea />\r\n          <GoogleAuth />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\"; // default going to index.js\r\nimport App from \"./components/App\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}