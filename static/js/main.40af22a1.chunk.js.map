{"version":3,"sources":["reducers/index.js","client_socket.js","components/SideBar.js","actions/index.js","components/Comment.js","components/Chat.js","components/MessageArea.js","components/TextArea.js","components/UserProfile.js","components/GoogleAuth.js","components/App.js","index.js"],"names":["INITIAL_STATE","isSignedIn","combineReducers","messageReducer","state","messages","action","type","payload","profileReducer","userListReducer","usersList","socket","openSocket","process","connect","userList","updateUsersList","currentUsersList","useEffect","on","loggedUsers","useState","modalIsOpen","setModalIsOpen","openModal","closeModal","className","map","user","buttonClass","isCurrentUser","id","socketID","createButtonClass","key","onClick","username","initWidth","initHeight","onFocus","console","log","onRequestClose","isOpen","privateChat","Comment","props","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","image","src","alt","href","name","text","recieveMessage","message","scrollToBottom","scrollingElement","document","querySelector","scrollTop","scrollHeight","ind","Date","senderName","MessageArea","sideBarRef","useRef","toggleRef","ref","leftIcon","current","rightIcon","style","width","visibility","classList","toggle","toggleSideBar","private","userProfile","placeholder","onKeyPress","event","target","value","imgURL","emit","sendMessage","createGuestUserProfile","userID","split","forEach","char","createGoogleUserProfile","googleProfile","getId","getName","getImageUrl","GoogleAuth","onAuthChange","auth","currentUser","get","getBasicProfile","signIn","signAsGuest","onSignInClick","onSignOutClick","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","renderAuthButton","React","Component","userDetails","guestDetails","App","to","pathname","query","handleTakePhoto","dataUri","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","basename","path","exact","location"],"mappings":"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","file":"static/js/main.40af22a1.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null\r\n};\r\n\r\nconst messageReducer = (state = { messages: [] }, action) => {\r\n  if (action.type === \"RECIEVE_MESSAGE\") {\r\n    return { ...state, messages: [...state.messages, action.payload] };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst userListReducer = (state = { usersList: [] }, action) => {\r\n  if (action.type === \"UPDATE_USERS_LIST\") {\r\n    return {\r\n      ...state,\r\n      usersList: [...action.payload]\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst profileReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return { ...state, isSignedIn: true, ...action.payload };\r\n    case \"SIGN_AS_GUEST\":\r\n      return { ...state, isSignedIn: false, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  messageReducer,\r\n  profileReducer,\r\n  userListReducer\r\n});\r\n","import openSocket from \"socket.io-client\";\r\n\r\nconst socket = openSocket(process.env.REACT_APP_LOCALHOST_WEBSOCKET);\r\nexport { socket };\r\n","import \"../styles/SideBar.css\";\r\nimport \"../styles/ResizableModal.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUsersList } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\nimport App from \"./App\";\r\nimport Modal from \"react-modal-resizable-draggable\";\r\n\r\nconst SideBar = ({ userList, updateUsersList }) => {\r\n  useEffect(() => {\r\n    socket.on(\"userListHasChanged\", loggedUsers => {\r\n      updateUsersList(loggedUsers);\r\n    });\r\n  }, [updateUsersList]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n  const chatModal = () => {\r\n    return (\r\n      <Modal\r\n        initWidth={800}\r\n        initHeight={400}\r\n        onFocus={() => console.log(\"Modal is clicked\")}\r\n        className={\"my-modal-custom-class\"}\r\n        onRequestClose={closeModal}\r\n        isOpen={modalIsOpen}\r\n      >\r\n        <App privateChat={true} />\r\n        <button onClick={closeModal}>Close modal</button>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const createButtonClass = user => {\r\n    const isCurrentUser = socket.id === user.socketID;\r\n    const buttonClass = `${isCurrentUser ? \"youspan\" : \"\"} logged-usr`;\r\n    return buttonClass;\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    return userList.map(user => {\r\n      const buttonClass = createButtonClass(user);\r\n      return (\r\n        <button key={user.id} className={buttonClass} onClick={openModal}>\r\n          {user.username}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui side-bar segment\">\r\n      <button className=\"header\">Users in chat:</button>\r\n      {renderUserList()}\r\n      {chatModal()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ userListReducer }) => {\r\n  return {\r\n    userList: [...userListReducer.usersList]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { updateUsersList })(SideBar);\r\n","export const signIn = userDetails => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: userDetails\r\n  };\r\n};\r\n\r\nexport const signAsGuest = guestDetails => {\r\n  return {\r\n    type: \"SIGN_AS_GUEST\",\r\n    payload: guestDetails\r\n  };\r\n};\r\n\r\nexport const recieveMessage = message => {\r\n  return {\r\n    type: \"RECIEVE_MESSAGE\",\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const updateUsersList = currentUsersList => {\r\n  return {\r\n    type: \"UPDATE_USERS_LIST\",\r\n    payload: currentUsersList\r\n  };\r\n};\r\n","import \"../styles/Comment.css\";\r\nimport React from \"react\";\r\n\r\nconst Comment = props => {\r\n  const date =\r\n    props.date.getDate() +\r\n    \"/\" +\r\n    (props.date.getMonth() + 1) +\r\n    \"/\" +\r\n    props.date.getFullYear() +\r\n    \" @ \" +\r\n    props.date.getHours() +\r\n    \":\" +\r\n    props.date.getMinutes() +\r\n    \":\" +\r\n    props.date.getSeconds();\r\n\r\n  const renderAvatar = () => {\r\n    if (props.image === \"\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"avatar\">\r\n        <img src={props.image} alt=\"\" />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"content\">\r\n        {renderAvatar()}\r\n        <a className=\"author\" href=\"www.walla.com\">\r\n          {props.name}\r\n        </a>\r\n        <div className=\"metadata\">\r\n          <div>{date}</div>\r\n        </div>\r\n        <div className=\"text\">\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import \"../styles/Chat.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { recieveMessage } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Chat = ({ recieveMessage, messages, privateChat }) => {\r\n  useEffect(() => {\r\n    if (!privateChat) {\r\n      socket.on(\"viewMessage\", message => recieveMessage(message));\r\n    }\r\n  }, [recieveMessage, privateChat]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    let scrollingElement = document.querySelector(\".comments\");\r\n    if (scrollingElement !== null) {\r\n      scrollingElement.scrollTop = scrollingElement.scrollHeight;\r\n    }\r\n  };\r\n\r\n  const renderComments = () => {\r\n    return messages.map((message, ind) => {\r\n      if (typeof message === \"string\") {\r\n        return <Comment key={ind} name={\"\"} date={new Date()} text={message} />;\r\n      }\r\n      return (\r\n        <Comment\r\n          key={ind}\r\n          name={message.senderName}\r\n          date={new Date(message.date)}\r\n          text={message.text}\r\n          image={message.image}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui comments segment container\">{renderComments()}</div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: [...state.messageReducer.messages]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { recieveMessage })(Chat);\r\n","import \"../styles/MessageArea.css\";\r\nimport React, { useRef } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst MessageArea = ({ privateChat }) => {\r\n  const sideBarRef = useRef(null);\r\n  const toggleRef = useRef(null);\r\n\r\n  const toggleSideBar = (sideBarRef, toggleRef) => {\r\n    const leftIcon = toggleRef.current.querySelector(\".left\");\r\n    const rightIcon = toggleRef.current.querySelector(\".right\");\r\n    if (!sideBarRef.current.style.width) {\r\n      sideBarRef.current.style.visibility = \"visible\";\r\n      sideBarRef.current.style.width = \"40%\";\r\n    } else {\r\n      sideBarRef.current.style.width = null;\r\n      sideBarRef.current.style.visibility = null;\r\n    }\r\n\r\n    leftIcon.classList.toggle(\"hidden\");\r\n    rightIcon.classList.toggle(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui top-view\">\r\n      {!privateChat ? (\r\n        <div ref={sideBarRef} className=\"side-bar-view\">\r\n          <SideBar />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"chat-view\">\r\n        <div\r\n          ref={toggleRef}\r\n          className=\"open-side-bar\"\r\n          onClick={() => toggleSideBar(sideBarRef, toggleRef)}\r\n        >\r\n          <i className=\"angle double right icon\"></i>\r\n          <i className=\"angle double left icon hidden\"></i>\r\n          <i className=\"clipboard list icon\"></i>\r\n        </div>\r\n        <Chat private={privateChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageArea;\r\n","import \"../styles/TextArea.css\";\r\nimport React from \"react\";\r\nimport { socket } from \"../client_socket\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TextArea = ({ userProfile, privateChat }) => {\r\n  const sendMessage = message => {\r\n    if (!privateChat) {\r\n      socket.emit(\"subscribeMessage\", message);\r\n    }\r\n  };\r\n  const onSubmit = event => {\r\n    if (event.key === \"Enter\") {\r\n      const message = {\r\n        senderName: userProfile.username,\r\n        date: new Date(),\r\n        text: event.target.value,\r\n        image: userProfile.imgURL\r\n      };\r\n      event.target.value = \"\";\r\n      sendMessage(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container fluid focus input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chat\"\r\n        className=\"input-sizing\"\r\n        onKeyPress={onSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return { userProfile: state.profileReducer };\r\n};\r\nexport default connect(mapStateToProps)(TextArea);\r\n","import { socket } from \"../client_socket\";\r\n\r\nconst createGuestUserProfile = userID => {\r\n  let username = \"\";\r\n  userID.split(\"\").forEach((char, ind) => {\r\n    if (ind % 4 === 0) {\r\n      username += char;\r\n    }\r\n  });\r\n  return {\r\n    socketID: socket.id,\r\n    id: userID,\r\n    username: `Guest ${username}`,\r\n    imgURL:\r\n      \"https://previews.123rf.com/images/lineartestpilot/lineartestpilot1908/lineartestpilot190834340/128650855-cartoon-question-mark-with-speech-bubble-in-smooth-gradient-style.jpg\"\r\n  };\r\n};\r\n\r\nconst createGoogleUserProfile = googleProfile => {\r\n  return {\r\n    socketID: socket.id,\r\n    id: googleProfile.getId(),\r\n    username: googleProfile.getName(),\r\n    imgURL: googleProfile.getImageUrl()\r\n  };\r\n};\r\n\r\nexport { createGuestUserProfile, createGoogleUserProfile };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signAsGuest } from \"../actions\";\r\nimport { createGuestUserProfile, createGoogleUserProfile } from \"./UserProfile\";\r\nimport { socket } from \"../client_socket\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    socket.on(\"connect\", () => {\r\n      const userProfile = createGuestUserProfile(socket.id);\r\n\r\n      window.gapi.load(\"client:auth2\", () => {\r\n        window.gapi.client\r\n          .init({\r\n            clientId:\r\n              \"548027089353-j03e14pvp4o81noalqup4e212iscpqlb.apps.googleusercontent.com\",\r\n            scope: \"email profile\"\r\n          })\r\n          .then(() => {\r\n            this.auth = window.gapi.auth2.getAuthInstance();\r\n            this.props.signAsGuest(userProfile);\r\n            this.onAuthChange(this.auth.isSignedIn.get());\r\n            this.auth.isSignedIn.listen(this.onAuthChange);\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    let userProfile = null;\r\n    if (isSignedIn) {\r\n      userProfile = createGoogleUserProfile(\r\n        this.auth.currentUser.get().getBasicProfile()\r\n      );\r\n      this.props.signIn(userProfile);\r\n    } else {\r\n      userProfile = createGuestUserProfile(this.props.userProfile.socketID);\r\n      this.props.signAsGuest(userProfile);\r\n    }\r\n\r\n    socket.emit(\"profileCreated\", this.props.userProfile);\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n  renderAuthButton() {\r\n    if (this.props.userProfile.isSignedIn === null) {\r\n      return <span>There is some problem with the API</span>;\r\n    } else if (this.props.userProfile.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign in with Google\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { userProfile: state.profileReducer };\r\n};\r\nexport default connect(mapStateToProps, { signIn, signAsGuest })(GoogleAuth);\r\n","import \"../styles/App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport MessageArea from \"./MessageArea\";\r\nimport TextArea from \"./TextArea\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\nimport { socket } from \"../client_socket\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst App = ({ privateChat }) => {\r\n  useEffect(() => () => socket.emit(\"disconnect\"), []);\r\n\r\n  function handleTakePhoto(dataUri) {\r\n    // Do stuff with the photo...\r\n    console.log(\"takePhoto\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui chat\">\r\n        <div className=\"ui placeholder segment\">\r\n          <div className=\"head-view\">\r\n            <MessageArea privateChat={privateChat} />\r\n          </div>\r\n          <div className=\"ui divider\"></div>\r\n          <div className=\"buttom-view\">\r\n            <div className=\"text-area\">\r\n              <TextArea privateChat={privateChat} />\r\n            </div>\r\n            <Link to={{ pathname: \"/Camera\", query: { handleTakePhoto } }}>\r\n              <i className=\"icon camera\"></i>\r\n            </Link>\r\n            {!privateChat ? (\r\n              <div className=\"google-auth-area\">\r\n                <GoogleAuth />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport Camera from \"react-html5-camera-photo\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport reducers from \"./reducers\"; // default going to index.js\r\nimport App from \"./components/App\";\r\nimport Test from \"./components/Test\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\r\n      <Route\r\n        path=\"/\"\r\n        exact\r\n        render={(props) => <App {...props} privateChat={false} />}\r\n      />\r\n      <Route\r\n        path=\"/Camera\"\r\n        exact\r\n        render={({ location }) => <Camera {...location.query} />}\r\n      />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}