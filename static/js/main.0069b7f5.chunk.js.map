{"version":3,"sources":["reducers/index.js","client_socket.js","components/SideBar.js","actions/index.js","components/Comment.js","components/Chat.js","components/MessageArea.js","components/TextArea.js","components/UserProfile.js","components/GoogleAuth.js","components/App.js","index.js"],"names":["INITIAL_STATE","isSignedIn","combineReducers","messageReducer","state","messages","action","type","payload","profileReducer","userListReducer","usersList","socket","openSocket","connect","userList","updateUsersList","currentUsersList","useEffect","on","loggedUsers","className","map","user","buttonClass","isCurrentUser","id","socketID","createButtonClass","key","username","Comment","props","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","image","src","alt","href","name","text","recieveMessage","message","scrollToBottom","scrollingElement","document","querySelector","scrollTop","scrollHeight","ind","Date","senderName","MessageArea","sideBarRef","useRef","toggleRef","ref","onClick","leftIcon","current","rightIcon","style","width","visibility","classList","toggle","toggleSideBar","userProfile","placeholder","onKeyPress","event","target","value","imgURL","emit","sendMessage","createGuestUserProfile","userID","split","forEach","char","createGoogleUserProfile","googleProfile","getId","getName","getImageUrl","GoogleAuth","onAuthChange","auth","currentUser","get","getBasicProfile","signIn","signAsGuest","onSignInClick","onSignOutClick","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","renderAuthButton","React","Component","userDetails","guestDetails","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"4WAEMA,EAAgB,CACpBC,WAAY,MA+BCC,cAAgB,CAC7BC,eA7BqB,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC3D,MAAoB,oBAAhBA,EAAOC,KACF,eAAKH,EAAZ,CAAmBC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsBC,EAAOE,YAEnDJ,GA0BPK,eAbqB,WAAoC,IAAnCL,EAAkC,uDAA1BJ,EAAeM,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,eAAKH,EAAZ,CAAmBH,YAAY,GAASK,EAAOE,SACjD,IAAK,gBACH,OAAO,eAAKJ,EAAZ,CAAmBH,YAAY,GAAUK,EAAOE,SAClD,QACE,OAAOJ,IAOXM,gBAxBsB,WAAwC,IAAvCN,EAAsC,uDAA9B,CAAEO,UAAW,IAAML,EAAW,uCAC7D,MAAoB,sBAAhBA,EAAOC,KACF,eACFH,EADL,CAEEO,UAAU,YAAKL,EAAOE,WAGnBJ,K,4BClBHQ,E,MAASC,GAAW,qCCyCXC,eALS,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,gBACzB,MAAO,CACLK,SAAS,YAAKL,EAAgBC,cAGM,CAAEK,gBCtBX,SAAAC,GAC7B,MAAO,CACLV,KAAM,oBACNC,QAASS,KDmBEH,EArCC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC3BE,qBAAU,WACRN,EAAOO,GAAG,sBAAsB,SAAAC,GAC9BJ,EAAgBI,QAEjB,CAACJ,IAmBJ,OACE,yBAAKK,UAAU,uBACb,4BAAQA,UAAU,UAAlB,kBAZKN,EAASO,KAAI,SAAAC,GAClB,IAAMC,EARgB,SAAAD,GACxB,IAAME,EAAgBb,EAAOc,KAAOH,EAAKI,SAEzC,MADiB,UAAMF,EAAgB,UAAY,GAAlC,eAMKG,CAAkBL,GACtC,OACE,4BAAQM,IAAKN,EAAKG,GAAIL,UAAWG,GAC9BD,EAAKO,iBEqBDC,G,YA1CC,SAAAC,GACd,IAAMC,EACJD,EAAMC,KAAKC,UACX,KACCF,EAAMC,KAAKE,WAAa,GACzB,IACAH,EAAMC,KAAKG,cACX,MACAJ,EAAMC,KAAKI,WACX,IACAL,EAAMC,KAAKK,aACX,IACAN,EAAMC,KAAKM,aAYb,OACE,yBAAKlB,UAAU,WACb,yBAAKA,UAAU,WAXG,KAAhBW,EAAMQ,MACD,KAGP,yBAAKnB,UAAU,UACb,yBAAKoB,IAAKT,EAAMQ,MAAOE,IAAI,MAQ3B,uBAAGrB,UAAU,SAASsB,KAAK,iBACxBX,EAAMY,MAET,yBAAKvB,UAAU,YACb,6BAAMY,IAER,yBAAKZ,UAAU,QACb,2BAAIW,EAAMa,WCYL/B,eALS,SAAAV,GACtB,MAAO,CACLC,SAAS,YAAKD,EAAMD,eAAeE,aAGC,CAAEyC,eFpCZ,SAAAC,GAC5B,MAAO,CACLxC,KAAM,kBACNC,QAASuC,KEiCEjC,EA3CF,SAAC,GAAkC,IAAhCgC,EAA+B,EAA/BA,eAAgBzC,EAAe,EAAfA,SAC9Ba,qBAAU,WACRN,EAAOO,GAAG,eAAe,SAAA4B,GAAO,OAAID,EAAeC,QAClD,CAACD,IAEJ5B,qBAAU,WACR8B,MACC,CAAC3C,IAEJ,IAAM2C,EAAiB,WACrB,IAAIC,EAAmBC,SAASC,cAAc,aACrB,OAArBF,IACFA,EAAiBG,UAAYH,EAAiBI,eAqBlD,OACE,yBAAKhC,UAAU,iCAjBRhB,EAASiB,KAAI,SAACyB,EAASO,GAC5B,MAAuB,kBAAZP,EACF,kBAAC,EAAD,CAASlB,IAAKyB,EAAKV,KAAM,GAAIX,KAAM,IAAIsB,KAAQV,KAAME,IAG5D,kBAAC,EAAD,CACElB,IAAKyB,EACLV,KAAMG,EAAQS,WACdvB,KAAM,IAAIsB,KAAKR,EAAQd,MACvBY,KAAME,EAAQF,KACdL,MAAOO,EAAQP,eCWViB,EAxCK,WAClB,IAAMC,EAAaC,iBAAO,MACpBC,EAAYD,iBAAO,MAiBzB,OACE,yBAAKtC,UAAU,eACb,yBAAKwC,IAAKH,EAAYrC,UAAU,iBAC9B,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,yBACEwC,IAAKD,EACLvC,UAAU,gBACVyC,QAAS,kBAxBK,SAACJ,EAAYE,GACjC,IAAMG,EAAWH,EAAUI,QAAQb,cAAc,SAC3Cc,EAAYL,EAAUI,QAAQb,cAAc,UAC7CO,EAAWM,QAAQE,MAAMC,OAI5BT,EAAWM,QAAQE,MAAMC,MAAQ,KACjCT,EAAWM,QAAQE,MAAME,WAAa,OAJtCV,EAAWM,QAAQE,MAAME,WAAa,UACtCV,EAAWM,QAAQE,MAAMC,MAAQ,OAMnCJ,EAASM,UAAUC,OAAO,UAC1BL,EAAUI,UAAUC,OAAO,UAYNC,CAAcb,EAAYE,KAEzC,uBAAGvC,UAAU,4BACb,uBAAGA,UAAU,kCACb,uBAAGA,UAAU,yBAEf,kBAAC,EAAD,SCHOP,G,MAAAA,aAHS,SAAAV,GACtB,MAAO,CAAEoE,YAAapE,EAAMK,kBAEfK,EA/BE,SAAC,GAAqB,IAAnB0D,EAAkB,EAAlBA,YAiBlB,OACE,yBAAKnD,UAAU,kCACb,2BACEd,KAAK,OACLkE,YAAY,OACZpD,UAAU,eACVqD,WAnBW,SAAAC,GACf,GAAkB,UAAdA,EAAM9C,IAAiB,CACzB,IAAMkB,EAAU,CACdS,WAAYgB,EAAY1C,SACxBG,KAAM,IAAIsB,KACVV,KAAM8B,EAAMC,OAAOC,MACnBrC,MAAOgC,EAAYM,QAErBH,EAAMC,OAAOC,MAAQ,GAXL,SAAA9B,GAClBnC,EAAOmE,KAAK,mBAAoBhC,GAW9BiC,CAAYjC,Y,wCChBZkC,EAAyB,SAAAC,GAC7B,IAAIpD,EAAW,GAMf,OALAoD,EAAOC,MAAM,IAAIC,SAAQ,SAACC,EAAM/B,GAC1BA,EAAM,IAAM,IACdxB,GAAYuD,MAGT,CACL1D,SAAUf,EAAOc,GACjBA,GAAIwD,EACJpD,SAAS,SAAD,OAAWA,GACnBgD,OACE,mLAIAQ,EAA0B,SAAAC,GAC9B,MAAO,CACL5D,SAAUf,EAAOc,GACjBA,GAAI6D,EAAcC,QAClB1D,SAAUyD,EAAcE,UACxBX,OAAQS,EAAcG,gBCjBpBC,E,2MAsBJC,aAAe,SAAA3F,GACb,IAAIuE,EACJ,GAAIvE,EACFuE,EAAcc,EACZ,EAAKO,KAAKC,YAAYC,MAAMC,mBAE9B,EAAKhE,MAAMiE,OAAOzB,OACb,CACL,IAAMA,EAAcS,EAClB,EAAKjD,MAAMwC,YAAY7C,UAEzB,EAAKK,MAAMkE,YAAY1B,GAEzB5D,EAAOmE,KAAK,iBAAkB,EAAK/C,MAAMwC,c,EAG3C2B,cAAgB,WACd,EAAKN,KAAKI,U,EAGZG,eAAiB,WACf,EAAKP,KAAKQ,W,mFA1CS,IAAD,OAClBzF,EAAOO,GAAG,WAAW,WACnBmF,OAAOC,KAAKC,KAAK,gBAAgB,WAC/BF,OAAOC,KAAKE,OACTC,KAAK,CACJC,SACE,2EACFC,MAAO,kBAERC,MAAK,WACJ,EAAKhB,KAAOS,OAAOC,KAAKO,MAAMC,kBAC9B,EAAKnB,aAAa,EAAKC,KAAK5F,WAAW8F,OACvC,EAAKF,KAAK5F,WAAW+G,OAAO,EAAKpB,oBAGvC,IAAMpB,EAAcS,EAAuBrE,EAAOc,IAClD,EAAKM,MAAMkE,YAAY1B,GACvB5D,EAAOmE,KAAK,iBAAkB,EAAK/C,MAAMwC,kB,yCA4B3C,OAA0C,OAAtCyC,KAAKjF,MAAMwC,YAAYvE,WAClB,oEACEgH,KAAKjF,MAAMwC,YAAYvE,WAE9B,4BAAQ6D,QAASmD,KAAKb,eAAgB/E,UAAU,wBAC9C,uBAAGA,UAAU,gBADf,YAOA,6BACE,4BAAQyC,QAASmD,KAAKd,cAAe9E,UAAU,wBAC7C,uBAAGA,UAAU,gBADf,0B,+BASN,OAAO,6BAAM4F,KAAKC,wB,GAnEGC,IAAMC,WA2EhBtG,eAJS,SAAAV,GAEtB,MAAO,CAAEoE,YAAapE,EAAMK,kBAEU,CAAEwF,ONjFpB,SAAAoB,GACpB,MAAO,CACL9G,KAAM,UACNC,QAAS6G,IM8EqCnB,YN1EvB,SAAAoB,GACzB,MAAO,CACL/G,KAAM,gBACNC,QAAS8G,KMuEExG,CAAkD6E,GCpDlD4B,EAvBH,WACV,OACE,yBAAKlG,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,eACf,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACb,kBAAC,EAAD,YCXRmG,EAAmBlB,OAAOmB,sCAAwCC,IAClEC,EAAQC,YACZC,EACAL,EAAiBM,YAAgBC,OAGnCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFzE,SAASC,cAAc,Y","file":"static/js/main.0069b7f5.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null\r\n};\r\n\r\nconst messageReducer = (state = { messages: [] }, action) => {\r\n  if (action.type === \"RECIEVE_MESSAGE\") {\r\n    return { ...state, messages: [...state.messages, action.payload] };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst userListReducer = (state = { usersList: [] }, action) => {\r\n  if (action.type === \"UPDATE_USERS_LIST\") {\r\n    return {\r\n      ...state,\r\n      usersList: [...action.payload]\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst profileReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return { ...state, isSignedIn: true, ...action.payload };\r\n    case \"SIGN_AS_GUEST\":\r\n      return { ...state, isSignedIn: false, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  messageReducer,\r\n  profileReducer,\r\n  userListReducer\r\n});\r\n","import openSocket from \"socket.io-client\";\r\n\r\nconst socket = openSocket(\"wss://chatsocket490.herokuapp.com\");\r\n// const socket = openSocket(\"http://192.168.1.3:8000\");\r\n// const socket = openSocket(\"http://localhost:8000\");\r\nexport { socket };\r\n","import \"../styles/SideBar.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUsersList } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\n\r\nconst SideBar = ({ userList, updateUsersList }) => {\r\n  useEffect(() => {\r\n    socket.on(\"userListHasChanged\", loggedUsers => {\r\n      updateUsersList(loggedUsers);\r\n    });\r\n  }, [updateUsersList]);\r\n\r\n  const createButtonClass = user => {\r\n    const isCurrentUser = socket.id === user.socketID;\r\n    const buttonClass = `${isCurrentUser ? \"youspan\" : \"\"} logged-usr`;\r\n    return buttonClass;\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    return userList.map(user => {\r\n      const buttonClass = createButtonClass(user);\r\n      return (\r\n        <button key={user.id} className={buttonClass}>\r\n          {user.username}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui side-bar segment\">\r\n      <button className=\"header\">Users in chat:</button>\r\n      {renderUserList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ userListReducer }) => {\r\n  return {\r\n    userList: [...userListReducer.usersList]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { updateUsersList })(SideBar);\r\n","export const signIn = userDetails => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: userDetails\r\n  };\r\n};\r\n\r\nexport const signAsGuest = guestDetails => {\r\n  return {\r\n    type: \"SIGN_AS_GUEST\",\r\n    payload: guestDetails\r\n  };\r\n};\r\n\r\nexport const recieveMessage = message => {\r\n  return {\r\n    type: \"RECIEVE_MESSAGE\",\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const updateUsersList = currentUsersList => {\r\n  return {\r\n    type: \"UPDATE_USERS_LIST\",\r\n    payload: currentUsersList\r\n  };\r\n};\r\n","import \"../styles/Comment.css\";\r\nimport React from \"react\";\r\n\r\nconst Comment = props => {\r\n  const date =\r\n    props.date.getDate() +\r\n    \"/\" +\r\n    (props.date.getMonth() + 1) +\r\n    \"/\" +\r\n    props.date.getFullYear() +\r\n    \" @ \" +\r\n    props.date.getHours() +\r\n    \":\" +\r\n    props.date.getMinutes() +\r\n    \":\" +\r\n    props.date.getSeconds();\r\n\r\n  const renderAvatar = () => {\r\n    if (props.image === \"\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"avatar\">\r\n        <img src={props.image} alt=\"\" />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"content\">\r\n        {renderAvatar()}\r\n        <a className=\"author\" href=\"www.walla.com\">\r\n          {props.name}\r\n        </a>\r\n        <div className=\"metadata\">\r\n          <div>{date}</div>\r\n        </div>\r\n        <div className=\"text\">\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import \"../styles/Chat.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { recieveMessage } from \"../actions\";\r\nimport { socket } from \"../client_socket\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Chat = ({ recieveMessage, messages }) => {\r\n  useEffect(() => {\r\n    socket.on(\"viewMessage\", message => recieveMessage(message));\r\n  }, [recieveMessage]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    let scrollingElement = document.querySelector(\".comments\");\r\n    if (scrollingElement !== null) {\r\n      scrollingElement.scrollTop = scrollingElement.scrollHeight;\r\n    }\r\n  };\r\n\r\n  const renderComments = () => {\r\n    return messages.map((message, ind) => {\r\n      if (typeof message === \"string\") {\r\n        return <Comment key={ind} name={\"\"} date={new Date()} text={message} />;\r\n      }\r\n      return (\r\n        <Comment\r\n          key={ind}\r\n          name={message.senderName}\r\n          date={new Date(message.date)}\r\n          text={message.text}\r\n          image={message.image}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui comments segment container\">{renderComments()}</div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: [...state.messageReducer.messages]\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { recieveMessage })(Chat);\r\n","import \"../styles/MessageArea.css\";\r\nimport React, { useRef } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst MessageArea = () => {\r\n  const sideBarRef = useRef(null);\r\n  const toggleRef = useRef(null);\r\n\r\n  const toggleSideBar = (sideBarRef, toggleRef) => {\r\n    const leftIcon = toggleRef.current.querySelector(\".left\");\r\n    const rightIcon = toggleRef.current.querySelector(\".right\");\r\n    if (!sideBarRef.current.style.width) {\r\n      sideBarRef.current.style.visibility = \"visible\";\r\n      sideBarRef.current.style.width = \"40%\";\r\n    } else {\r\n      sideBarRef.current.style.width = null;\r\n      sideBarRef.current.style.visibility = null;\r\n    }\r\n\r\n    leftIcon.classList.toggle(\"hidden\");\r\n    rightIcon.classList.toggle(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui top-view\">\r\n      <div ref={sideBarRef} className=\"side-bar-view\">\r\n        <SideBar />\r\n      </div>\r\n      <div className=\"chat-view\">\r\n        <div\r\n          ref={toggleRef}\r\n          className=\"open-side-bar\"\r\n          onClick={() => toggleSideBar(sideBarRef, toggleRef)}\r\n        >\r\n          <i className=\"angle double right icon\"></i>\r\n          <i className=\"angle double left icon hidden\"></i>\r\n          <i className=\"clipboard list icon\"></i>\r\n        </div>\r\n        <Chat />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageArea;\r\n","import \"../styles/TextArea.css\";\r\nimport React from \"react\";\r\nimport { socket } from \"../client_socket\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TextArea = ({ userProfile }) => {\r\n  const sendMessage = message => {\r\n    socket.emit(\"subscribeMessage\", message);\r\n  };\r\n  const onSubmit = event => {\r\n    if (event.key === \"Enter\") {\r\n      const message = {\r\n        senderName: userProfile.username,\r\n        date: new Date(),\r\n        text: event.target.value,\r\n        image: userProfile.imgURL\r\n      };\r\n      event.target.value = \"\";\r\n      sendMessage(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container fluid focus input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chat\"\r\n        className=\"input-sizing\"\r\n        onKeyPress={onSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return { userProfile: state.profileReducer };\r\n};\r\nexport default connect(mapStateToProps)(TextArea);\r\n","import { socket } from \"../client_socket\";\r\n\r\nconst createGuestUserProfile = userID => {\r\n  let username = \"\";\r\n  userID.split(\"\").forEach((char, ind) => {\r\n    if (ind % 4 === 0) {\r\n      username += char;\r\n    }\r\n  });\r\n  return {\r\n    socketID: socket.id,\r\n    id: userID,\r\n    username: `Guest ${username}`,\r\n    imgURL:\r\n      \"https://previews.123rf.com/images/lineartestpilot/lineartestpilot1908/lineartestpilot190834340/128650855-cartoon-question-mark-with-speech-bubble-in-smooth-gradient-style.jpg\"\r\n  };\r\n};\r\n\r\nconst createGoogleUserProfile = googleProfile => {\r\n  return {\r\n    socketID: socket.id,\r\n    id: googleProfile.getId(),\r\n    username: googleProfile.getName(),\r\n    imgURL: googleProfile.getImageUrl()\r\n  };\r\n};\r\n\r\nexport { createGuestUserProfile, createGoogleUserProfile };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signAsGuest } from \"../actions\";\r\nimport { createGuestUserProfile, createGoogleUserProfile } from \"./UserProfile\";\r\nimport { socket } from \"../client_socket\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    socket.on(\"connect\", () => {\r\n      window.gapi.load(\"client:auth2\", () => {\r\n        window.gapi.client\r\n          .init({\r\n            clientId:\r\n              \"548027089353-j03e14pvp4o81noalqup4e212iscpqlb.apps.googleusercontent.com\",\r\n            scope: \"email profile\"\r\n          })\r\n          .then(() => {\r\n            this.auth = window.gapi.auth2.getAuthInstance();\r\n            this.onAuthChange(this.auth.isSignedIn.get());\r\n            this.auth.isSignedIn.listen(this.onAuthChange);\r\n          });\r\n      });\r\n      const userProfile = createGuestUserProfile(socket.id);\r\n      this.props.signAsGuest(userProfile);\r\n      socket.emit(\"profileCreated\", this.props.userProfile);\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    let userProfile;\r\n    if (isSignedIn) {\r\n      userProfile = createGoogleUserProfile(\r\n        this.auth.currentUser.get().getBasicProfile()\r\n      );\r\n      this.props.signIn(userProfile);\r\n    } else {\r\n      const userProfile = createGuestUserProfile(\r\n        this.props.userProfile.socketID\r\n      );\r\n      this.props.signAsGuest(userProfile);\r\n    }\r\n    socket.emit(\"profileCreated\", this.props.userProfile);\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n  renderAuthButton() {\r\n    if (this.props.userProfile.isSignedIn === null) {\r\n      return <span>There is some problem with the API</span>;\r\n    } else if (this.props.userProfile.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n            Sign in with Google\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.profileReducer.userDetails.getId());\r\n  return { userProfile: state.profileReducer };\r\n};\r\nexport default connect(mapStateToProps, { signIn, signAsGuest })(GoogleAuth);\r\n","import \"../styles/App.css\";\r\nimport React from \"react\";\r\nimport MessageArea from \"./MessageArea\";\r\nimport TextArea from \"./TextArea\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui chat\">\r\n        <div className=\"ui placeholder segment\">\r\n          <div className=\"head-view\">\r\n            <MessageArea />\r\n          </div>\r\n          <div className=\"ui divider\"></div>\r\n          <div className=\"buttom-view\">\r\n            <div className=\"text-area\">\r\n              <TextArea />\r\n            </div>\r\n            <div className=\"google-auth-area\">\r\n              <GoogleAuth />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\"; // default going to index.js\r\nimport App from \"./components/App\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}